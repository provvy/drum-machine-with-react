{"version":3,"sources":["components/Button.js","components/Display.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","useEffect","document","addEventListener","e","id","key","toUpperCase","audio","querySelector","currentTime","play","onMouseDown","onclick","className","ref","forwardedRef","src","source","value","Display","display","App","useState","setDisplay","sources","setSources","childRef","useRef","name","current","Array","length","map","index","trigger","el","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8NAmBeA,G,MAjBA,SAACC,GAYd,OAVAC,qBAAU,WACRC,SAASC,iBAAiB,WAAW,SAAAC,GACnC,IAAIC,EAAKD,EAAEE,IAAIC,cACXC,EAAQN,SAASO,cAAT,WAA2BJ,IACnCG,IACFA,EAAME,YAAc,EACpBF,EAAMG,aAGT,IAED,wBAAQC,YAAaZ,EAAMa,QAASC,UAAU,WAAWT,GAAIL,EAAMK,GAAnE,SAAuE,uBAAOU,IAAKf,EAAMgB,aAAcC,IAAKjB,EAAMkB,OAAQJ,UAAU,OAAOT,GAAIL,EAAMmB,YCP1IC,EANC,SAACpB,GACf,OACE,qBAAKK,GAAG,UAAUS,UAAU,UAA5B,SAAuCd,EAAMqB,WCgElCC,MA/Df,WAAgB,IAAD,EAEiBC,mBAAS,qBAF1B,mBAENF,EAFM,KAEGG,EAFH,OAGiBD,mBAAS,IAH1B,mBAGNE,EAHM,KAGGC,EAHH,KAIPC,EAAWC,iBAAO,IAuCxB,OArCA3B,qBAAU,WACRyB,EAAW,CAAC,CAACpB,IAAK,IAClBuB,KAAM,WACNX,OAAQ,4DACR,CAACZ,IAAK,IACNuB,KAAM,WACNX,OAAQ,4DACR,CAACZ,IAAK,IACNuB,KAAM,WACNX,OAAQ,4DACR,CAACZ,IAAK,IACNuB,KAAM,WACNX,OAAQ,8DACR,CAACZ,IAAK,IACNuB,KAAM,OACNX,OAAQ,4DACR,CAACZ,IAAK,IACNuB,KAAM,UACNX,OAAQ,0DACR,CAACZ,IAAK,IACNuB,KAAM,cACNX,OAAQ,8DACR,CAACZ,IAAK,IACNuB,KAAM,OACNX,OAAQ,8DACR,CAACZ,IAAK,IACNuB,KAAM,YACNX,OAAQ,4DACRS,EAASG,QAAU,IAAIC,MAAMN,EAAQO,UACpC,IASD,sBAAKlB,UAAU,MAAf,UACE,kDACA,sBAAKA,UAAU,eAAeT,GAAG,eAAjC,UACE,qBAAKS,UAAU,SAAf,SACE,cAAC,EAAD,CAASO,QAASA,MAEpB,qBAAKP,UAAU,eAAf,SAEIW,EAAQQ,KAAI,SAACf,EAAQgB,GAAT,OACV,cAAC,EAAD,CAAQrB,QAAS,kBAhBb,SAACqB,EAAOL,GACtBF,EAASG,QAAQI,GAAOxB,YAAc,EACtCiB,EAASG,QAAQI,GAAOvB,OACxBa,EAAWK,GAasBM,CAAQD,EAAOhB,EAAOW,OAAmBb,aAAc,SAAAoB,GAAE,OAAIT,EAASG,QAAQI,GAASE,GAAIjB,MAAOD,EAAOZ,IAAKY,OAAQA,EAAOA,OAAQb,GAAIa,EAAOW,MAA9GK,WAKjE,mECnDSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9C,SAAS+C,eAAe,SAM1BZ,M","file":"static/js/main.080a4c2e.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\n\r\nconst Button = (props) => {\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", e => {\r\n      let id = e.key.toUpperCase();\r\n      let audio = document.querySelector(`#${id}`);\r\n      if (audio) {\r\n        audio.currentTime = 0;\r\n        audio.play();\r\n      }\r\n    })\r\n  }, [])\r\n  return (\r\n    <button onMouseDown={props.onclick} className=\"drum-pad\" id={props.id}><audio ref={props.forwardedRef} src={props.source} className=\"clip\" id={props.value}></audio></button>\r\n  )\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst Display = (props) => {\r\n  return (\r\n    <div id=\"display\" className=\"display\">{props.display}</div>\r\n  )\r\n}\r\n\r\nexport default Display;\r\n","import './App.css';\nimport React, {useState, useEffect, useRef} from \"react\";\nimport Button from \"./components/Button.js\";\nimport Display from \"./components/Display.js\";\n\nfunction App() {\n\n  const [display, setDisplay] = useState(\"Press the buttons\");\n  const [sources, setSources] = useState([]);\n  const childRef = useRef([]);\n\n  useEffect(() => {\n    setSources([{key: \"Q\",\n    name: \"Heater 1\",\n    source: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\"},\n    {key: \"W\",\n    name: \"Heater 2\",\n    source: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\"},\n    {key: \"E\",\n    name: \"Heater 3\",\n    source: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\"},\n    {key: \"A\",\n    name: \"Heater 4\",\n    source: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\"},\n    {key: \"S\",\n    name: \"Clap\",\n    source: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"},\n    {key: \"D\",\n    name: \"Open HH\",\n    source: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\"},\n    {key: \"Z\",\n    name: \"Kick n' Hat\",\n    source: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"},\n    {key: \"X\",\n    name: \"Kick\",\n    source: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\"},\n    {key: \"C\",\n    name: \"Closed HH\",\n    source: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"}]);\n    childRef.current = new Array(sources.length);\n  }, [])\n\n  const trigger = (index, name) => {\n    childRef.current[index].currentTime = 0;\n    childRef.current[index].play();\n    setDisplay(name);\n  }\n\n  return (\n    <div className=\"app\">\n      <header>Drum Machine</header>\n      <div className=\"drum-machine\" id=\"drum-machine\">\n        <div className=\"header\">\n          <Display display={display} />\n        </div>\n        <div className=\"drum-pad-div\">\n          {\n            sources.map((source, index) => (\n              <Button onclick={() => trigger(index, source.name)} key={index} forwardedRef={el => childRef.current[index] = el} value={source.key} source={source.source} id={source.name} />\n            ))\n          }\n        </div>\n      </div>\n      <footer>coded by Paolo Provveduto</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}